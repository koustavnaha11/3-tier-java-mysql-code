apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 2
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        imagePullPolicy: Always
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.mysql.rootPassword }}
        ports:
        - containerPort: 3306
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "500Mi"
          requests:
            memory: "256Mi"
            cpu: "250m"
            ephemeral-storage: "250Mi"
        readinessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
              - mysqladmin
              - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsUser: 10001
          runAsGroup: 10001
          readOnlyRootFilesystem: true
      volumeMounts:
      - name: initdb
        mountPath: /docker-entrypoint-initdb.d/init.sql
        subPath: init.sql
      - name: mysql-data
        mountPath: /var/lib/mysql
      volumes:
      - name: initdb
        configMap:
          name: mysql-initdb-config
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mysql
            topologyKey: "kubernetes.io/hostname"
